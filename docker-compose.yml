version: '3'

services:
  zodiac-db:
    image: postgres:10.4
    volumes:
      - zodiacdb:/var/lib/postgresql/data/
    networks:
      - microservices
  zodiac-web:
    build: .
    entrypoint: /code/entrypoint.sh
    volumes:
      - .:/code
    networks:
      - microservices
      # - aurora_default
    ports:
      - "8001:8001"
    depends_on:
      - zodiac-db

  pisces-db:
    image: postgres:10.4
    volumes:
      - piscesdbvolume:/var/lib/postgresql/data/
    networks:
      - microservices
  pisces-web:
    build: .
    entrypoint: /code/entrypoint.sh
    volumes:
      - .:/code
    networks:
      - microservices
    ports:
      - "8007:8007"
    depends_on:
      - pisces-db

  scorpio-db:
    image: postgres:10.4
    volumes:
      - scorpiodbvolume:/var/lib/postgresql/data/
    networks:
      - microservices
  scorpio-web:
    build: .
    entrypoint: /code/entrypoint.sh
    volumes:
      - .:/code
    networks:
      - microservices
    ports:
      - "8008:8008"
    depends_on:
      - scorpio-db

  elasticsearch:
    image: elasticsearch:7.0.0
    environment:
      - node.name=elasticsearch
      - discovery.seed_hosts=elasticsearch
      - cluster.initial_master_nodes=elasticsearch
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - http.cors.enabled=true
      - http.cors.allow-origin=http://localhost:8000
      - http.cors.allow-headers=Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With
      - http.cors.allow-credentials=true
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elasticsearch:/usr/share/elasticsearch/data
    networks:
      - microservices
    ports:
      - 9200:9200

  my-rabbit:
    image: rabbitmq:3-management
    networks:
      - microservices

volumes:
  zodiacdb:
  piscesdbvolume:
  scorpiodbvolume:
  elasticsearch:

networks:
  microservices:
