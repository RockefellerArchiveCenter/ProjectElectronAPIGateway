version: '3'

services:
  zodiac-db:
    image: postgres:10.4
    volumes:
      - zodiacdb:/var/lib/postgresql/data/
    networks:
      - microservices
  zodiac-web:
    build: .
    entrypoint: /code/entrypoint.sh
    volumes:
      - .:/code
    networks:
      - microservices
      # - aurora_default
    ports:
      - "8001:8001"
    depends_on:
      - zodiac-db

  aquarius-db:
    image: postgres:10.4
    volumes:
      - aquariusdb:/var/lib/postgresql/data/
    networks:
      - microservices
  aquarius-web:
    build: aquarius/
    entrypoint: /code/aquarius/entrypoint.sh
    volumes:
      - .:/code
    networks:
      - microservices
      # - aurora_default
    ports:
      - "8002:8002"
    depends_on:
      - aquarius-db

  fornax-db:
    image: postgres:10.4
    volumes:
      - fornaxdb:/var/lib/postgresql/data/
    networks:
      - microservices
  fornax-web:
    build: fornax/
    entrypoint: /code/fornax/entrypoint.sh
    volumes:
      - .:/code
      - ~/.pe-shared/ursamajor-fornax:/src/:ro
      - ~/.am/ss-location-data:/dest/
    networks:
      - microservices
    ports:
      - "8003:8003"
    depends_on:
      - fornax-db

  libra-db:
    image: postgres:10.4
    volumes:
      - libradb:/var/lib/postgresql/data/
    networks:
      - microservices
  libra-web:
    build: libra/
    entrypoint: /code/libra/entrypoint.sh
    volumes:
      - .:/code
    networks:
      - microservices
    ports:
      - "8004:8004"
    depends_on:
      - libra-db

  ursa-major-db:
    image: postgres:10.4
    volumes:
      - ursamajordb:/var/lib/postgresql/data/
    networks:
      - microservices
  ursa-major-web:
    build: ursa_major/
    entrypoint: /code/ursa_major/entrypoint.sh
    volumes:
      - .:/code
      - ~/.pe-shared/aurora-ursamajor:/src/:ro
      - ~/.pe-shared/ursamajor-fornax:/dest/
    networks:
      - microservices
    ports:
      - "8005:8005"
    depends_on:
      - ursa-major-db

  gemini-db:
    image: postgres:10.4
    volumes:
      - geminidb:/var/lib/postgresql/data/
    networks:
      - microservices
  gemini-web:
    build: gemini/
    entrypoint: /code/gemini/entrypoint.sh
    volumes:
      - .:/code
    networks:
      - microservices
    ports:
      - "8006:8006"
    depends_on:
      - gemini-db

  pisces-db:
    image: postgres:10.4
    volumes:
      - piscesdb:/var/lib/postgresql/data/
    networks:
      - microservices
  pisces-web:
    build: pisces/
    entrypoint: /code/pisces/entrypoint.sh
    volumes:
      - .:/code/
    networks:
      - microservices
    ports:
      - "8007:8007"
    depends_on:
      - pisces-db

  elasticsearch:
    image: elasticsearch:6.6.1
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - http.cors.enabled=true
      - http.cors.allow-origin=http://localhost:8080
      - http.cors.allow-headers=Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With
      - http.cors.allow-credentials=true
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elasticsearch:/usr/share/elasticsearch/data
    networks:
      - microservices
    ports:
      - 9200:9200

  my-rabbit:
    image: rabbitmq:3-management
    networks:
      - microservices

volumes:
  zodiacdb:
  aquariusdb:
  fornaxdb:
  libradb:
  ursamajordb:
  geminidb:
  piscesdb:
  elasticsearch:

networks:
  microservices:
